<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="indexContextMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>549, 17</value>
  </metadata>
  <metadata name="fksContextMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>383, 17</value>
  </metadata>
  <metadata name="toolTip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>114, 17</value>
  </metadata>
  <data name="fkModelOnlyCheck.ToolTip" xml:space="preserve">
    <value>Causes this foreign key and associated index to be ignored during SQL generation, forward engineering and synchronization operations. Note that foreign keys are always ignored for tables using storage engines that do not support them, such as MyISAM.</value>
  </data>
  <metadata name="partitionTreeMenuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>204, 17</value>
  </metadata>
  <data name="label34.Text" xml:space="preserve">
    <value>Defines how the rows in MyISAM tables should be stored. The option value can FIXED or DYNAMIC for static or variable-length row format. The utility myisampack can be used to set the type to COMPRESSED.</value>
  </data>
  <data name="label11.Text" xml:space="preserve">
    <value>Note: foreign keys can only be defined for certain storage engines (like InnoDB). The server accepts foreign key definitions for other storage engines but silently ignores them. Switch your table engine to  one that supports foreign keys to allow adjustments here.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>