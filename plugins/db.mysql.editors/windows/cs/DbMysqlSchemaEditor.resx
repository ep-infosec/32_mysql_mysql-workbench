<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>